{"entries":[{"timestamp":1755416968025,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":185,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":334,"diffs":[[1,""]]},{"start1":1,"length1":7140,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":230,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1755417662522,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2978,"length1":142,"diffs":[[1,"function gameOver() {\n"]]}]}]},{"timestamp":1755417673771,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1541,"length1":59,"diffs":[[1,"        if (i == selected) led.plot(i, 0)\n        else led.unplot(i, 0)\n"]]},{"start1":2319,"length1":140,"diffs":[[1,"                draw(0, 0, 0, 1, 150); draw(4, 0, 0, 1, 150); draw(0, 1, 0, 1, 100)\n"]]},{"start1":2978,"length1":229,"diffs":[[1,"function gameOver() {music.createSoundExpression(WaveShape.Sine, 5000, 0, 255, 0, 500, SoundExpressionEffect.None, InterpolationCurve.Linear)\n    for (let i = 100; i > 0; i--)\n        draw(0, 0, 4, 4, i)\n"]]},{"start1":3207,"length1":114,"diffs":[[1,"    while (input.buttonIsPressed(Button.AB)) pause(100);\n    while (!input.buttonIsPressed(Button.AB)) pause(20);\n"]]},{"start1":4194,"length1":0,"diffs":[[1,"                score++;\n"]]},{"start1":4562,"length1":195,"diffs":[[1,""]]}]}]},{"timestamp":1755418252754,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1622,"length1":24,"diffs":[[1,"let activeGame = \"menu\"\n"]]},{"start1":2502,"length1":116,"diffs":[[1,"                led.plot(starX, starY); led.plot(playerX, 4)\n"]]},{"start1":2618,"length1":37,"diffs":[[1,""]]},{"start1":3159,"length1":39,"diffs":[[1,"    for (let i = 100; i > 0; i--) {\n"]]},{"start1":3224,"length1":19,"diffs":[[1,"        pause(100);\n"]]},{"start1":4605,"length1":32,"diffs":[[1,"            if(cactusX == 0) {\n"]]},{"start1":5240,"length1":154,"diffs":[[1,"            if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n"]]},{"start1":7534,"length1":61,"diffs":[[1,""]]},{"start1":7660,"length1":61,"diffs":[[1,""]]}]}]},{"timestamp":1755418843236,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1622,"length1":24,"diffs":[[1,"let activeGame = \"mole\"\n"]]},{"start1":1666,"length1":14,"diffs":[[1,""]]},{"start1":2502,"length1":37,"diffs":[[1,"                draw(1, 1, 0, 1, 10)\n"]]},{"start1":2673,"length1":368,"diffs":[[1,"                draw(0, 0, 1, 4, 10)\n                led.plot(moleX, moleY)\n"]]},{"start1":6496,"length1":0,"diffs":[[1,"            if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            if (input.buttonIsPressed(Button.AB) && invX == playerX) { score++; invX = randint(0, 4) }\n"]]},{"start1":7696,"length1":132,"diffs":[[1,""]]},{"start1":8047,"length1":93,"diffs":[[1,"    }\n"]]}]}]},{"timestamp":1755419439751,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1845,"length1":46,"diffs":[[1,"let moleX = 2, moleY = 3\n"]]},{"start1":6032,"length1":38,"diffs":[[1,""]]},{"start1":6152,"length1":339,"diffs":[[1,"            moleX = randint(0, 4)\n            moleY = randint(2, 4)\n            led.plot(moleX, moleY)\n            basic.pause(400)\n            if (input.buttonIsPressed(Button.A) && moleX < 2) score++\n            else if (input.buttonIsPressed(Button.B) && moleX >= 2) score++\n            else lives--\n"]]},{"start1":6494,"length1":29,"diffs":[[1,""]]},{"start1":7751,"length1":151,"diffs":[[1,"    if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n    if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n"]]},{"start1":8070,"length1":153,"diffs":[[1,""]]}]}]},{"timestamp":1755420023290,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1450,"length1":68,"diffs":[[1,"function drawTopBar(selected: number, total: number) {\n"]]},{"start1":1541,"length1":84,"diffs":[[1,"        led.plotBrightness(i, 0, i == selected ? 255 : 20)\n"]]},{"start1":2122,"length1":0,"diffs":[[1,"            drawTopBar(currentGame, games.length)\n"]]},{"start1":2243,"length1":57,"diffs":[[1,"            drawTopBar(currentGame, games.length)\n"]]},{"start1":3825,"length1":15,"diffs":[[1,""]]},{"start1":5442,"length1":37,"diffs":[[1,"            drawTopBar(lives, 3)\n"]]},{"start1":6178,"length1":219,"diffs":[[1,"            drawTopBar(lives, 3)\n            if (blink < 4) led.plot(moleX, moleY)\n            else if (!moleScored) lives--\n"]]},{"start1":6813,"length1":37,"diffs":[[1,"            drawTopBar(lives, 3)\n"]]},{"start1":7938,"length1":91,"diffs":[[1,"    else if(activeGame == \"mole\" && moleX < 2) {score++; moleScored = true; blink = 5;}\n"]]},{"start1":8276,"length1":91,"diffs":[[1,"    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5;}\n"]]}]}]},{"timestamp":1755420619692,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":5093,"length1":30,"diffs":[[1,"                music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n"]]},{"start1":6345,"length1":80,"diffs":[[1,"            else if (!moleScored) { lives--; moleScored = true; }\n"]]},{"start1":8050,"length1":104,"diffs":[[1,"    else if (activeGame == \"mole\" && moleX < 2) { score++; moleScored = true; blink = 5; }\n"]]},{"start1":8391,"length1":104,"diffs":[[1,"    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5; }\n"]]},{"start1":8646,"length1":107,"diffs":[[1,"    } else if (activeGame == \"invader\" && invX == playerX) { score++; invX = randint(0, 4) }\n"]]},{"start1":8742,"length1":282,"diffs":[[1,""]]}]}]},{"timestamp":1755421041689,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3129,"length1":88,"diffs":[[1,""]]},{"start1":7484,"length1":0,"diffs":[[1,"            if (input.buttonIsPressed(Button.AB) && fishX == playerX) score++\n"]]},{"start1":8698,"length1":66,"diffs":[[1,""]]}]}]},{"timestamp":1755421585093,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1929,"length1":47,"diffs":[[1,"let invX = 2, invDir = 1\n"]]},{"start1":8601,"length1":161,"diffs":[[1,"    } else if (activeGame == \"invader\" && invX == playerX) { score++; invX = randint(0, 4); soundScore() }\n"]]},{"start1":8778,"length1":273,"diffs":[[1,""]]}]}]},{"timestamp":1755422112273,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":6860,"length1":15,"diffs":[[1,""]]},{"start1":7067,"length1":134,"diffs":[[1,""]]},{"start1":7130,"length1":128,"diffs":[[1,""]]},{"start1":8784,"length1":85,"diffs":[[1,"    else if (activeGame == \"fishing\" && fishX == playerX) score++\n"]]},{"start1":8854,"length1":58,"diffs":[[1,"input.onLogoEvent(TouchButtonEvent.Touched, function() {\n"]]}]}]},{"timestamp":1755422704300,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1976,"length1":50,"diffs":[[1,"let fishX = 2, fishY = 2\n"]]},{"start1":2002,"length1":58,"diffs":[[1,"let games = [\"dino\", \"catch\", \"mole\", \"invader\", \"fishing\"]\n"]]},{"start1":7103,"length1":61,"diffs":[[1,"            if (bullY > randint(6, 12)) {\n"]]},{"start1":7279,"length1":66,"diffs":[[1,"            if (bullY <= 4) led.plot(bullX, bullY);\n"]]},{"start1":7517,"length1":499,"diffs":[[1,"// FISHING\ncontrol.inBackground(function fishingLoop() {\n    while (true) {\n        if (activeGame == \"fishing\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n"]]},{"start1":9061,"length1":88,"diffs":[[1,"    else if (activeGame == \"fishing\" && fishX == playerX) { score++; soundScore(); }\n"]]},{"start1":9150,"length1":99,"diffs":[[1,"input.onLogoEvent(TouchButtonEvent.Touched, function () {\n"]]},{"start1":9349,"length1":25,"diffs":[[1,""]]},{"start1":9395,"length1":0,"diffs":[[1,"    activeGame = \"menu\";\n"]]}]}]},{"timestamp":1755423294366,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1976,"length1":39,"diffs":[[1,"let simon: number[] = [], guesses: number[] = [];\n"]]},{"start1":3318,"length1":280,"diffs":[[1,"            } else if (games[currentGame] == \"fishing\") {\n                led.plot(fishX, fishY); led.plot(playerX, 4)\n"]]},{"start1":7582,"length1":448,"diffs":[[1,"// control.inBackground(function simonLoop() {\n//     while (true) {\n//         if (activeGame == \"simon\") {\n//             basic.clearScreen()\n//             drawTopBar(lives, 3)\n//             fishX = (fishX + randint(-1, 1) + 5) % 5\n//             fishY = (fishY + randint(-1, 1) + 5) % 4\n//             led.plot(fishX, fishY)\n//             led.plot(playerX, 4)\n//             basic.pause(300)\n//             if (lives <= 0) gameOver()\n//         } else basic.pause(100)\n//     }\n// })\n"]]},{"start1":9245,"length1":58,"diffs":[[1,"input.onLogoEvent(TouchButtonEvent.LongPressed, function () {\n"]]}]}]},{"timestamp":1755423554443,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":7732,"length1":828,"diffs":[[1,"control.inBackground(function simonLoop() {\n    while (true) {\n        if (activeGame == \"simon\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n"]]},{"start1":8100,"length1":91,"diffs":[[1,"            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n"]]},{"start1":8177,"length1":2,"diffs":[[1,"})\n\n"]]}]}]},{"timestamp":1755424151455,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1976,"length1":0,"diffs":[[1,"let simon: number[] = [], guessed = 0;\n"]]},{"start1":7732,"length1":75,"diffs":[[1,""]]},{"start1":7868,"length1":38,"diffs":[[1,"    simonSequence.push(randint(0, 2)) // only 3 buttons: 0=A, 1=B, 2=Logo\n"]]},{"start1":8133,"length1":62,"diffs":[[1,"        led.plotBrightness(step * 2, 2, 255) // spread buttons visually\n"]]},{"start1":8446,"length1":168,"diffs":[[1,"        if (guessed == simonSequence.length) {\n            score += simonSequence.length\n            soundScore()\n            basic.pause(300)\n            addSimonStep()\n        }\n    } else {\n        soundDamage()\n        gameOver()\n    }\n"]]},{"start1":8688,"length1":1,"diffs":[[1,""]]},{"start1":9089,"length1":51,"diffs":[[1,""]]},{"start1":9443,"length1":51,"diffs":[[1,""]]},{"start1":9918,"length1":53,"diffs":[[1,""]]}]}]},{"timestamp":1755424749561,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":7693,"length1":25,"diffs":[[1,"let simonSequence: number[] = []\n"]]},{"start1":7767,"length1":20,"diffs":[[1,""]]},{"start1":7768,"length1":167,"diffs":[[1,""]]},{"start1":7792,"length1":0,"diffs":[[1,"    simonSequence = []\n"]]},{"start1":8133,"length1":571,"diffs":[[1,"        switch()\n        led.plotBrightness(step * 2, 2, 255)\n"]]},{"start1":8436,"length1":627,"diffs":[[1,""]]}]}]},{"timestamp":1755425340930,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":7734,"length1":24,"diffs":[[1,"let waitingInput = false\nlet simonOn = true;\n"]]},{"start1":7826,"length1":16,"diffs":[[1,"    simonSequence = []\n"]]},{"start1":7905,"length1":363,"diffs":[[1,""]]},{"start1":7947,"length1":0,"diffs":[[1,"function startSimon() {\n    guessed = 0\n    waitingInput = false\n    addSimonStep()\n}\n\nfunction addSimonStep() {\n    simonSequence.push(randint(0, 2))\n    guessed = 0\n    flashSimonSequence()\n    waitingInput = true\n}\n\n"]]},{"start1":8198,"length1":30,"diffs":[[1,"    waitingInput = false\n    for (let step of simonSequence) {\n"]]},{"start1":8944,"length1":0,"diffs":[[1,"    waitingInput = true\n"]]},{"start1":9009,"length1":64,"diffs":[[1,"    if (!waitingInput) return\n    if (button == simonSequence[guessed]) {\n"]]},{"start1":9728,"length1":0,"diffs":[[1,"        if (guessed == simonSequence.length) { score += simonSequence.length; soundScore(); basic.pause(300); addSimonStep() }\n"]]}]}]},{"timestamp":1755425935848,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1929,"length1":47,"diffs":[[1,"let invX = 2, invDir = 1, bullX = 0, bullY = 0\n"]]},{"start1":1977,"length1":66,"diffs":[[1,""]]},{"start1":3388,"length1":402,"diffs":[[1,"                led.plot(1, 1);\n                led.plot(1, 3);\n                led.plot(3, 1);\n                led.plot(3, 3);\n                led.plot(2, 2);\n"]]},{"start1":4103,"length1":48,"diffs":[[1,""]]},{"start1":6994,"length1":0,"diffs":[[1,"    bullY = 6;\n"]]},{"start1":7693,"length1":0,"diffs":[[1,"let simon: number[] = []\nlet guessed = 0\nlet simonReady = false;\n"]]},{"start1":8105,"length1":32,"diffs":[[1,""]]},{"start1":8240,"length1":24,"diffs":[[1,""]]}]}]},{"timestamp":1755426301129,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1763,"length1":94,"diffs":[[1,"let cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n"]]},{"start1":3455,"length1":52,"diffs":[[1,"                switch (randint(0,2)) {\n"]]},{"start1":3751,"length1":55,"diffs":[[1,"                        led.plotBrightness(2, 0, 255);\n"]]},{"start1":3856,"length1":39,"diffs":[[1,""]]},{"start1":4459,"length1":18,"diffs":[[1,""]]},{"start1":8153,"length1":43,"diffs":[[1,"            if(guessed == simon.length) {\n"]]},{"start1":8704,"length1":24,"diffs":[[1,"        switch(step) {\n"]]},{"start1":9400,"length1":29,"diffs":[[1,"    if(!simonReady) return;\n"]]},{"start1":11427,"length1":58,"diffs":[[1,"input.onLogoEvent(TouchButtonEvent.Pressed, function () {\n"]]},{"start1":11538,"length1":38,"diffs":[[1,"    if(activeGame == \"menu\") return;\n"]]}]}]},{"timestamp":1755426888435,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3390,"length1":0,"diffs":[[1,"                // led.plot(fishX, fishY); led.plot(playerX, 4)\n\n"]]},{"start1":4269,"length1":118,"diffs":[[1,"    showTwoDigits(score)\n"]]},{"start1":9536,"length1":0,"diffs":[[1,"        guessed++\n"]]},{"start1":10128,"length1":28,"diffs":[[1,""]]},{"start1":10181,"length1":45,"diffs":[[1,""]]}]}]},{"timestamp":1755427435762,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":230,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1755416968024,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1755418782065,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"// === UTILITIES ===\nfunction draw(x: number, y: number, w: number, h: number, b: number) {\n    for (let ox = 0; ox <= w; ox++) {\n        for (let oy = 0; oy <= h; oy++) {\n            if (x + ox >= 0 && x + ox < 5 && 4 - (y + oy) >= 0 && 4 - (y + oy) < 5)\n                led.plotBrightness(x + ox, 4 - (y + oy), b)\n        }\n    }\n}\n\nfunction touching(x1: number, y1: number, w1: number, h1: number, x2: number, y2: number, w2: number, h2: number) {\n    return !(x1 + w1 < x2 || x1 > x2 + w2 || y1 + h1 < y2 || y1 > y2 + h2)\n}\n\n// 2x5 font for scores\nconst digits2x5: number[][][] = [\n    [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], [[0, 1], [1, 1], [0, 1], [0, 1], [1, 1]], [[1, 1], [0, 1], [1, 1], [1, 0], [1, 1]], [[1, 1], [0, 1], [1, 1], [0, 1], [1, 1]], [[1, 0], [1, 1], [1, 1], [0, 1], [0, 1]],\n    [[1, 1], [1, 0], [1, 1], [0, 1], [1, 1]], [[1, 1], [1, 0], [1, 1], [1, 1], [1, 1]], [[1, 1], [0, 1], [0, 1], [0, 1], [0, 1]], [[1, 1], [1, 1], [0, 0], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [0, 1], [1, 1]]\n]\n\nfunction drawDigit2x5(d: number, x: number, brightness: number) {\n    for (let y = 0; y < 5; y++)\n        for (let dx = 0; dx < 2; dx++)\n            if (digits2x5[d][y][dx]) led.plotBrightness(x + dx, y, brightness)\n}\n\nfunction showTwoDigits(num: number) {\n    basic.clearScreen()\n    let tens = Math.idiv(num, 10) % 10\n    let ones = num % 10\n    drawDigit2x5(tens, 0, 180)\n    drawDigit2x5(ones, 3, 180)\n}\n\n// Top bar for menu/game\nfunction drawTopBar(selected: number, total: number) {\n    for (let i = 0; i < total; i++)\n        led.plotBrightness(i, 0, i == selected ? 255 : 20)\n}\n\n// === GLOBALS ===\nlet activeGame = \"menu\"\nlet currentGame = 0\nlet score = 0\nlet lives = 3\nlet playerX = 2\n\nlet cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n\nlet starX = 2, starY = 1\nlet moleX = 2, moleY = 3\nlet invX = 2, invDir = 1\nlet fishX = 2, fishY = 2\n\nlet games = [\"dino\", \"catch\", \"mole\", \"invader\", \"fishing\"]\n\n// === MENU LOOP ===\ncontrol.inBackground(function menuLoop() {\n    while (true) {\n        if (activeGame == \"menu\") {\n            drawTopBar(currentGame, games.length)\n            // simple animated preview\n            basic.clearScreen()\n            drawTopBar(currentGame, games.length)\n            if (games[currentGame] == \"dino\") {\n                draw(2, 3, 1, 0, 10) // sun\n                draw(0, 0, 0, 1, 50) // player\n                draw(3, 0, 1, 1, 100); // cactus\n            } else if (games[currentGame] == \"catch\") {\n                draw(1, 1, 0, 1, 10)\n                led.plot(3, 1);\n                led.plot(1, 3); led.plot(2, 4)\n            } else if (games[currentGame] == \"mole\") {\n                led.plot(moleX, moleY)\n            } else if (games[currentGame] == \"invader\") {\n                led.plot(invX, 1); led.plot(playerX, 4)\n            } else if (games[currentGame] == \"fishing\") {\n                led.plot(fishX, fishY); led.plot(playerX, 4)\n            }\n\n            basic.pause(300)\n        } else {\n            basic.pause(100)\n        }\n    }\n})\n\n// === GAME OVER ===\nfunction gameOver() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    for (let i = 100; i > 0; i -= 2) {\n        draw(0, 0, 4, 4, i);\n        pause(10);\n    }\n    showTwoDigits(score)\n    while (!input.buttonIsPressed(Button.AB)) pause(100);\n    while (input.buttonIsPressed(Button.AB)) pause(20);\n    score = 0;\n    activeGame = \"menu\"\n}\n\n// === GAME LOOPS ===\n// DINO\ncontrol.inBackground(function dinoLoop() {\n    while (true) {\n        if (activeGame == \"dino\") {\n            basic.clearScreen()\n            // jump logic\n            if (height > 0 || jump > 0) { height += jump; jump -= 0.1 }\n            else if (height < 0) height = 0\n            else if (input.buttonIsPressed(Button.A)) jump = 1\n\n            cactusX -= 0.25\n            if (cactusX < -10) {\n                cactusX = randint(8, 18)\n                cactusType = randint(0, 4)\n                cactusY = 0\n                if (cactusType <= 1) { cactusW = 1; cactusH = 1 }\n                else if (cactusType == 2) { cactusW = 0; cactusH = 1 }\n                else if (cactusType == 3) { cactusW = 0; cactusH = 2 }\n                else if (cactusType == 4) { cactusW = 2; cactusH = 0; cactusY = 2 }\n            }\n\n            if (touching(0, height, 0, 1, cactusX, cactusY, cactusW, cactusH)) gameOver()\n\n            draw(2, 3, 1, 1, 10) // sun\n            draw(0, height, 0, 1, 50) // player\n            if (cactusX > 4) draw(4, cactusY, 0, cactusH, Math.map(cactusX, 4, 8, 50, 0))\n            draw(cactusX, cactusY, cactusW, cactusH, 256)\n\n            if (cactusX == 0) {\n                score++;\n                music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n            }\n            basic.pause(20)\n        } else basic.pause(100)\n    }\n})\n\n// CATCH THE STAR\ncontrol.inBackground(function catchLoop() {\n    while (true) {\n        if (activeGame == \"catch\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            starY++\n            if (starY > 4) {\n                if (starX == playerX) score++; else lives--\n                starX = randint(0, 4)\n                starY = 1\n            }\n            // if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            // if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            led.plot(starX, starY)\n            led.plot(playerX, 4)\n            basic.pause(200)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// WHACK-A-MOLE\ncontrol.inBackground(function moleLoop() {\n    while (true) {\n        if (activeGame == \"mole\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            moleX = randint(0, 4)\n            moleY = randint(2, 4)\n            led.plot(moleX, moleY)\n            basic.pause(400)\n            if (input.buttonIsPressed(Button.A) && moleX < 2) score++\n            else if (input.buttonIsPressed(Button.B) && moleX >= 2) score++\n            else lives--\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// SPACE INVADER\ncontrol.inBackground(function invaderLoop() {\n    while (true) {\n        if (activeGame == \"invader\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            invX += invDir\n            if (invX <= 0 || invX >= 4) invDir *= -1\n            if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            if (input.buttonIsPressed(Button.AB) && invX == playerX) { score++; invX = randint(0, 4) }\n            led.plot(invX, 1)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// FISHING\ncontrol.inBackground(function fishingLoop() {\n    while (true) {\n        if (activeGame == \"fishing\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n            if (input.buttonIsPressed(Button.AB) && fishX == playerX) score++\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// === INPUT HANDLING FOR MENU ===\ninput.onButtonPressed(Button.A, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + games.length - 1) % games.length\n    else if (activeGame == \"catch\" && playerX > 0) playerX--\n})\ninput.onButtonPressed(Button.B, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + 1) % games.length\n    else if (activeGame == \"catch\" && playerX < 4) playerX++\n})\ninput.onButtonPressed(Button.AB, function () {\n    if (activeGame == \"menu\") {\n        activeGame = games[currentGame]\n        score = 0; lives = 3; playerX = 2\n    }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1755420594735,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"// === UTILITIES ===\nfunction draw(x: number, y: number, w: number, h: number, b: number) {\n    for (let ox = 0; ox <= w; ox++) {\n        for (let oy = 0; oy <= h; oy++) {\n            if (x + ox >= 0 && x + ox < 5 && 4 - (y + oy) >= 0 && 4 - (y + oy) < 5)\n                led.plotBrightness(x + ox, 4 - (y + oy), b)\n        }\n    }\n}\n\nfunction touching(x1: number, y1: number, w1: number, h1: number, x2: number, y2: number, w2: number, h2: number) {\n    return !(x1 + w1 < x2 || x1 > x2 + w2 || y1 + h1 < y2 || y1 > y2 + h2)\n}\n\n// 2x5 font for scores\nconst digits2x5: number[][][] = [\n    [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], [[0, 1], [1, 1], [0, 1], [0, 1], [1, 1]], [[1, 1], [0, 1], [1, 1], [1, 0], [1, 1]], [[1, 1], [0, 1], [1, 1], [0, 1], [1, 1]], [[1, 0], [1, 1], [1, 1], [0, 1], [0, 1]],\n    [[1, 1], [1, 0], [1, 1], [0, 1], [1, 1]], [[1, 1], [1, 0], [1, 1], [1, 1], [1, 1]], [[1, 1], [0, 1], [0, 1], [0, 1], [0, 1]], [[1, 1], [1, 1], [0, 0], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [0, 1], [1, 1]]\n]\n\nfunction drawDigit2x5(d: number, x: number, brightness: number) {\n    for (let y = 0; y < 5; y++)\n        for (let dx = 0; dx < 2; dx++)\n            if (digits2x5[d][y][dx]) led.plotBrightness(x + dx, y, brightness)\n}\n\nfunction showTwoDigits(num: number) {\n    basic.clearScreen()\n    let tens = Math.idiv(num, 10) % 10\n    let ones = num % 10\n    drawDigit2x5(tens, 0, 180)\n    drawDigit2x5(ones, 3, 180)\n}\n\n// Top bar for menu/game\nfunction drawTopBar(selected: number, total: number, fill = true) {\n    for (let i = 0; i < total; i++)\n        led.plotBrightness(i, 0, (fill ? i <= selected : i == selected) ? 255 : 20)\n}\n\n// === GLOBALS ===\nlet activeGame = \"menu\"\nlet currentGame = 0\nlet blink = 0\nlet score = 0\nlet lives = 3\nlet playerX = 2\n\nlet cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n\nlet starX = 2, starY = 1\nlet moleX = 2, moleY = 3, moleScored = false;\nlet invX = 2, invDir = 1\nlet fishX = 2, fishY = 2\n\nlet games = [\"dino\", \"catch\", \"mole\", \"invader\", \"fishing\"]\n\n// === MENU LOOP ===\ncontrol.inBackground(function menuLoop() {\n    while (true) {\n        if (activeGame == \"menu\") {\n            // simple animated preview\n            basic.clearScreen()\n            drawTopBar(currentGame, games.length, false)\n            if (games[currentGame] == \"dino\") {\n                draw(2, 3, 1, 0, 10) // sun\n                draw(0, 0, 0, 1, 50) // player\n                draw(3, 0, 1, 1, 100); // cactus\n            } else if (games[currentGame] == \"catch\") {\n                draw(1, 2, 0, 1, 10)\n                led.plot(3, 1);\n                led.plot(1, 3); led.plot(2, 4)\n            } else if (games[currentGame] == \"mole\") {\n                draw(0, 0, 1, 3, 10)\n                draw(3, 0, 1, 3, 10)\n                if (blink == 0) led.plot(moleX, moleY);\n                blink++;\n                if (blink > 5) {\n                    blink = 0;\n                    moleX = randint(0, 3);\n                    if (moleX >= 2) moleX++;\n                    moleY = randint(1, 4);\n                }\n            } else if (games[currentGame] == \"invader\") {\n                led.plot(invX, 1); led.plot(playerX, 4)\n            } else if (games[currentGame] == \"fishing\") {\n                led.plot(fishX, fishY); led.plot(playerX, 4)\n            }\n\n            basic.pause(300)\n        } else {\n            basic.pause(100)\n        }\n    }\n})\n\n// === GAME OVER ===\nfunction gameOver() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    for (let i = 100; i > 0; i -= 2) {\n        draw(0, 0, 4, 4, i);\n        pause(10);\n    }\n    showTwoDigits(score)\n    while (!input.buttonIsPressed(Button.AB)) pause(100);\n    while (input.buttonIsPressed(Button.AB)) pause(20);\n    score = 0;\n    lives = 3;\n    activeGame = \"menu\"\n}\n\n// === GAME LOOPS ===\n// DINO\ncontrol.inBackground(function dinoLoop() {\n    while (true) {\n        if (activeGame == \"dino\") {\n            basic.clearScreen()\n            // jump logic\n            if (height > 0 || jump > 0) { height += jump; jump -= 0.1 }\n            else if (height < 0) height = 0\n            else if (input.buttonIsPressed(Button.A)) jump = 1\n\n            cactusX -= 0.25\n            if (cactusX < -10) {\n                cactusX = randint(8, 18)\n                cactusType = randint(0, 4)\n                cactusY = 0\n                if (cactusType <= 1) { cactusW = 1; cactusH = 1 }\n                else if (cactusType == 2) { cactusW = 0; cactusH = 1 }\n                else if (cactusType == 3) { cactusW = 0; cactusH = 2 }\n                else if (cactusType == 4) { cactusW = 2; cactusH = 0; cactusY = 2 }\n            }\n\n            if (touching(0, height, 0, 1, cactusX, cactusY, cactusW, cactusH)) gameOver()\n\n            draw(2, 3, 1, 1, 10) // sun\n            draw(0, height, 0, 1, 50) // player\n            if (cactusX > 4) draw(4, cactusY, 0, cactusH, Math.map(cactusX, 4, 8, 50, 0))\n            draw(cactusX, cactusY, cactusW, cactusH, 256)\n\n            if (cactusX == 0) {\n                score++;\n                music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n            }\n            basic.pause(20)\n        } else basic.pause(100)\n    }\n})\n\n// CATCH THE STAR\ncontrol.inBackground(function catchLoop() {\n    while (true) {\n        if (activeGame == \"catch\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            starY++\n            if (starY > 4) {\n                if (starX == playerX) score++; else lives--\n                starX = randint(0, 4)\n                starY = 1\n            }\n            // if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            // if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            led.plot(starX, starY)\n            led.plot(playerX, 4)\n            basic.pause(200)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// WHACK-A-MOLE\ncontrol.inBackground(function moleLoop() {\n    blink = 5;\n    moleScored = true;\n    while (true) {\n        if (activeGame == \"mole\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            if (blink < 4) led.plot(moleX, moleY)\n            else if (!moleScored) { lives--; moleScored = true; }\n            blink++;\n            if (blink > 10) {\n                blink = 0;\n                moleX = randint(0, 3);\n                if (moleX >= 2) moleX++;\n                moleY = randint(1, 4);\n                moleScored = false;\n            }\n            if (lives <= 0) gameOver()\n            basic.pause(300)\n        } else basic.pause(100)\n    }\n})\n\n// SPACE INVADER\ncontrol.inBackground(function invaderLoop() {\n    while (true) {\n        if (activeGame == \"invader\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            invX += invDir\n            if (invX <= 0 || invX >= 4) invDir *= -1\n            led.plot(invX, 1)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// FISHING\ncontrol.inBackground(function fishingLoop() {\n    while (true) {\n        if (activeGame == \"fishing\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n            if (input.buttonIsPressed(Button.AB) && fishX == playerX) score++\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// === INPUT HANDLING FOR MENU ===\ninput.onButtonPressed(Button.A, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + games.length - 1) % games.length\n    else if (activeGame == \"catch\" && playerX > 0) playerX--\n    else if (activeGame == \"invader\" && playerX > 0) playerX--\n    else if (activeGame == \"mole\" && moleX < 2) { score++; moleScored = true; blink = 5; }\n})\ninput.onButtonPressed(Button.B, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + 1) % games.length\n    else if (activeGame == \"catch\" && playerX < 4) playerX++\n    else if (activeGame == \"invader\" && playerX < 4) playerX++\n    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5; }\n})\ninput.onButtonPressed(Button.AB, function () {\n    if (activeGame == \"menu\") {\n        activeGame = games[currentGame]\n        score = 0; lives = 3; playerX = 2\n    } else if (activeGame == \"invader\" && invX == playerX) { score++; invX = randint(0, 4) }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1755422470562,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"// === UTILITIES ===\nfunction draw(x: number, y: number, w: number, h: number, b: number) {\n    for (let ox = 0; ox <= w; ox++) {\n        for (let oy = 0; oy <= h; oy++) {\n            if (x + ox >= 0 && x + ox < 5 && 4 - (y + oy) >= 0 && 4 - (y + oy) < 5)\n                led.plotBrightness(x + ox, 4 - (y + oy), b)\n        }\n    }\n}\n\nfunction touching(x1: number, y1: number, w1: number, h1: number, x2: number, y2: number, w2: number, h2: number) {\n    return !(x1 + w1 < x2 || x1 > x2 + w2 || y1 + h1 < y2 || y1 > y2 + h2)\n}\n\n// 2x5 font for scores\nconst digits2x5: number[][][] = [\n    [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], [[0, 1], [1, 1], [0, 1], [0, 1], [1, 1]], [[1, 1], [0, 1], [1, 1], [1, 0], [1, 1]], [[1, 1], [0, 1], [1, 1], [0, 1], [1, 1]], [[1, 0], [1, 1], [1, 1], [0, 1], [0, 1]],\n    [[1, 1], [1, 0], [1, 1], [0, 1], [1, 1]], [[1, 1], [1, 0], [1, 1], [1, 1], [1, 1]], [[1, 1], [0, 1], [0, 1], [0, 1], [0, 1]], [[1, 1], [1, 1], [0, 0], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [0, 1], [1, 1]]\n]\n\nfunction drawDigit2x5(d: number, x: number, brightness: number) {\n    for (let y = 0; y < 5; y++)\n        for (let dx = 0; dx < 2; dx++)\n            if (digits2x5[d][y][dx]) led.plotBrightness(x + dx, y, brightness)\n}\n\nfunction showTwoDigits(num: number) {\n    basic.clearScreen()\n    let tens = Math.idiv(num, 10) % 10\n    let ones = num % 10\n    drawDigit2x5(tens, 0, 180)\n    drawDigit2x5(ones, 3, 180)\n}\n\n// Top bar for menu/game\nfunction drawTopBar(selected: number, total: number, fill = true) {\n    for (let i = 0; i < total; i++)\n        led.plotBrightness(i, 0, (fill ? i <= selected : i == selected) ? 255 : 20)\n}\n\n// === GLOBALS ===\nlet activeGame = \"menu\"\nlet currentGame = 0\nlet blink = 0\nlet score = 0\nlet lives = 3\nlet playerX = 2\n\nlet cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n\nlet starX = 2, starY = 1\nlet moleX = 2, moleY = 3, moleScored = false;\nlet invX = 2, invDir = 1, bullX = 0, bullY = 0\nlet fishX = 2, fishY = 2\n\nlet games = [\"dino\", \"catch\", \"mole\", \"invader\", \"fishing\"]\n\n// === MENU LOOP ===\ncontrol.inBackground(function menuLoop() {\n    while (true) {\n        if (activeGame == \"menu\") {\n            // simple animated preview\n            basic.clearScreen()\n            drawTopBar(currentGame, games.length, false)\n            if (games[currentGame] == \"dino\") {\n                draw(2, 3, 1, 0, 10) // sun\n                draw(0, 0, 0, 1, 50) // player\n                draw(3, 0, 1, 1, 100); // cactus\n            } else if (games[currentGame] == \"catch\") {\n                draw(1, 2, 0, 1, 10)\n                led.plot(3, 1);\n                led.plot(1, 3); led.plot(2, 4)\n            } else if (games[currentGame] == \"mole\") {\n                draw(0, 0, 1, 3, 10)\n                draw(3, 0, 1, 3, 10)\n                if (blink == 0) led.plot(moleX, moleY);\n                blink++;\n                if (blink > 5) {\n                    blink = 0;\n                    moleX = randint(0, 3);\n                    if (moleX >= 2) moleX++;\n                    moleY = randint(1, 4);\n                }\n            } else if (games[currentGame] == \"invader\") {\n                invX += invDir\n                if (invX <= 0 || invX >= 4) invDir *= -1\n                led.plot(invX, 1); led.plot(playerX, 4)\n            } else if (games[currentGame] == \"fishing\") {\n                led.plot(fishX, fishY); led.plot(playerX, 4)\n            }\n\n            basic.pause(300)\n        } else {\n            basic.pause(100)\n        }\n    }\n})\n\n// === GAME OVER ===\nfunction gameOver() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    for (let i = 100; i > 0; i -= 2) {\n        draw(0, 0, 4, 4, i);\n        pause(10);\n    }\n    showTwoDigits(score)\n    while (!input.buttonIsPressed(Button.AB)) pause(100);\n    while (input.buttonIsPressed(Button.AB)) pause(20);\n    score = 0;\n    lives = 3;\n    activeGame = \"menu\"\n}\n\n// === GAME LOOPS ===\n// DINO\ncontrol.inBackground(function dinoLoop() {\n    while (true) {\n        if (activeGame == \"dino\") {\n            basic.clearScreen()\n            // jump logic\n            if (height > 0 || jump > 0) { height += jump; jump -= 0.1 }\n            else if (height < 0) height = 0\n            else if (input.buttonIsPressed(Button.A)) jump = 1\n\n            cactusX -= 0.25\n            if (cactusX < -10) {\n                cactusX = randint(8, 18)\n                cactusType = randint(0, 4)\n                cactusY = 0\n                if (cactusType <= 1) { cactusW = 1; cactusH = 1 }\n                else if (cactusType == 2) { cactusW = 0; cactusH = 1 }\n                else if (cactusType == 3) { cactusW = 0; cactusH = 2 }\n                else if (cactusType == 4) { cactusW = 2; cactusH = 0; cactusY = 2 }\n            }\n\n            if (touching(0, height, 0, 1, cactusX, cactusY, cactusW, cactusH)) gameOver()\n\n            draw(2, 3, 1, 1, 10) // sun\n            draw(0, height, 0, 1, 50) // player\n            if (cactusX > 4) draw(4, cactusY, 0, cactusH, Math.map(cactusX, 4, 8, 50, 0))\n            draw(cactusX, cactusY, cactusW, cactusH, 256)\n\n            if (cactusX == 0) {\n                score++;\n                soundScore();\n            }\n            basic.pause(20)\n        } else basic.pause(100)\n    }\n})\n\n// CATCH THE STAR\ncontrol.inBackground(function catchLoop() {\n    while (true) {\n        if (activeGame == \"catch\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            starY++\n            if (starY > 4) {\n                if (starX == playerX) score++; else lives--\n                starX = randint(0, 4)\n                starY = 1\n            }\n            // if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            // if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            led.plot(starX, starY)\n            led.plot(playerX, 4)\n            basic.pause(200)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// WHACK-A-MOLE\ncontrol.inBackground(function moleLoop() {\n    blink = 5;\n    moleScored = true;\n    while (true) {\n        if (activeGame == \"mole\") {\n            basic.clearScreen()\n            draw(0, 0, 1, 3, 10)\n            draw(3, 0, 1, 3, 10)\n            drawTopBar(lives - 1, 3)\n            if (blink < 2) led.plot(moleX, moleY)\n            else if (!moleScored) { lives--; moleScored = true; soundDamage() }\n            blink++;\n            if (blink > 10) {\n                blink = 0;\n                moleX = randint(0, 3);\n                if (moleX >= 2) moleX++;\n                moleY = randint(1, 4);\n                moleScored = false;\n            }\n            if (lives <= 0) gameOver()\n            basic.pause(300)\n        } else basic.pause(100)\n    }\n})\n\n// SPACE INVADER\ncontrol.inBackground(function invaderLoop() {\n    while (true) {\n        if (activeGame == \"invader\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            invX += invDir\n            if (invX <= 0 || invX >= 4) invDir *= -1\n            led.plot(invX, 1)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// FISHING\ncontrol.inBackground(function fishingLoop() {\n    while (true) {\n        if (activeGame == \"fishing\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// === INPUT HANDLING FOR MENU ===\ninput.onButtonPressed(Button.A, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + games.length - 1) % games.length\n    else if (activeGame == \"catch\" && playerX > 0) playerX--\n    else if (activeGame == \"invader\" && playerX > 0) playerX--\n    else if (activeGame == \"mole\" && moleX < 2) { score++; moleScored = true; blink = 5; soundScore() }\n})\ninput.onButtonPressed(Button.B, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + 1) % games.length\n    else if (activeGame == \"catch\" && playerX < 4) playerX++\n    else if (activeGame == \"invader\" && playerX < 4) playerX++\n    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5; soundScore() }\n})\ninput.onButtonPressed(Button.AB, function () {\n    if (activeGame == \"menu\") {\n        activeGame = games[currentGame]\n        score = 0; lives = 3; playerX = 2\n    } else if (activeGame == \"invader\") {\n        draw(playerX, 1, 0, 2, 20);\n        if (invX == playerX) { score++; invX = randint(1, 3); soundScore() }\n    }\n    else if (activeGame == \"fishing\" && fishX == playerX) { score++; soundScore(); }\n})\n\ninput.onLogoEvent(TouchButtonEvent.Touched, function () {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    basic.clearScreen();\n    pause(100);\n    score = 0;\n    lives = 3;\n    activeGame = \"menu\";\n})\n\nfunction soundScore() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n}\n\nfunction soundDamage() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.JumpDown), music.PlaybackMode.InBackground);\n}","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1755424289023,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"// === UTILITIES ===\nfunction draw(x: number, y: number, w: number, h: number, b: number) {\n    for (let ox = 0; ox <= w; ox++) {\n        for (let oy = 0; oy <= h; oy++) {\n            if (x + ox >= 0 && x + ox < 5 && 4 - (y + oy) >= 0 && 4 - (y + oy) < 5)\n                led.plotBrightness(x + ox, 4 - (y + oy), b)\n        }\n    }\n}\n\nfunction touching(x1: number, y1: number, w1: number, h1: number, x2: number, y2: number, w2: number, h2: number) {\n    return !(x1 + w1 < x2 || x1 > x2 + w2 || y1 + h1 < y2 || y1 > y2 + h2)\n}\n\n// 2x5 font for scores\nconst digits2x5: number[][][] = [\n    [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], [[0, 1], [1, 1], [0, 1], [0, 1], [1, 1]], [[1, 1], [0, 1], [1, 1], [1, 0], [1, 1]], [[1, 1], [0, 1], [1, 1], [0, 1], [1, 1]], [[1, 0], [1, 1], [1, 1], [0, 1], [0, 1]],\n    [[1, 1], [1, 0], [1, 1], [0, 1], [1, 1]], [[1, 1], [1, 0], [1, 1], [1, 1], [1, 1]], [[1, 1], [0, 1], [0, 1], [0, 1], [0, 1]], [[1, 1], [1, 1], [0, 0], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [0, 1], [1, 1]]\n]\n\nfunction drawDigit2x5(d: number, x: number, brightness: number) {\n    for (let y = 0; y < 5; y++)\n        for (let dx = 0; dx < 2; dx++)\n            if (digits2x5[d][y][dx]) led.plotBrightness(x + dx, y, brightness)\n}\n\nfunction showTwoDigits(num: number) {\n    basic.clearScreen()\n    let tens = Math.idiv(num, 10) % 10\n    let ones = num % 10\n    drawDigit2x5(tens, 0, 180)\n    drawDigit2x5(ones, 3, 180)\n}\n\n// Top bar for menu/game\nfunction drawTopBar(selected: number, total: number, fill = true) {\n    for (let i = 0; i < total; i++)\n        led.plotBrightness(i, 0, (fill ? i <= selected : i == selected) ? 255 : 20)\n}\n\n// === GLOBALS ===\nlet activeGame = \"menu\"\nlet currentGame = 0\nlet blink = 0\nlet score = 0\nlet lives = 3\nlet playerX = 2\n\nlet cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n\nlet starX = 2, starY = 1\nlet moleX = 2, moleY = 3, moleScored = false;\nlet invX = 2, invDir = 1, bullX = 0, bullY = 0\nlet simon: number[] = [], guessed = 0;\n\nlet games = [\"dino\", \"catch\", \"mole\", \"invader\", \"simon\"]\n\n// === MENU LOOP ===\ncontrol.inBackground(function menuLoop() {\n    while (true) {\n        if (activeGame == \"menu\") {\n            // simple animated preview\n            basic.clearScreen()\n            drawTopBar(currentGame, games.length, false)\n            if (games[currentGame] == \"dino\") {\n                draw(2, 3, 1, 0, 10) // sun\n                draw(0, 0, 0, 1, 50) // player\n                draw(3, 0, 1, 1, 100); // cactus\n            } else if (games[currentGame] == \"catch\") {\n                draw(1, 2, 0, 1, 10)\n                led.plot(3, 1);\n                led.plot(1, 3); led.plot(2, 4)\n            } else if (games[currentGame] == \"mole\") {\n                draw(0, 0, 1, 3, 10)\n                draw(3, 0, 1, 3, 10)\n                if (blink == 0) led.plot(moleX, moleY);\n                blink++;\n                if (blink > 5) {\n                    blink = 0;\n                    moleX = randint(0, 3);\n                    if (moleX >= 2) moleX++;\n                    moleY = randint(1, 4);\n                }\n            } else if (games[currentGame] == \"invader\") {\n                invX += invDir\n                if (invX <= 0 || invX >= 4) invDir *= -1\n                led.plot(invX, 1); led.plot(playerX, 4)\n            } else if (games[currentGame] == \"simon\") {\n                // led.plot(fishX, fishY); led.plot(playerX, 4)\n                led.plot(1, 1);\n                led.plot(1, 3);\n                led.plot(3, 1);\n                led.plot(3, 3);\n                led.plot(2, 2);\n            }\n\n            basic.pause(300)\n        } else {\n            basic.pause(100)\n        }\n    }\n})\n\n// === GAME OVER ===\nfunction gameOver() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    for (let i = 100; i > 0; i -= 2) {\n        draw(0, 0, 4, 4, i);\n        pause(10);\n    }\n    showTwoDigits(score)\n    while (!input.buttonIsPressed(Button.AB)) pause(100);\n    while (input.buttonIsPressed(Button.AB)) pause(20);\n    score = 0;\n    lives = 3;\n    activeGame = \"menu\"\n}\n\n// === GAME LOOPS ===\n// DINO\ncontrol.inBackground(function dinoLoop() {\n    while (true) {\n        if (activeGame == \"dino\") {\n            basic.clearScreen()\n            // jump logic\n            if (height > 0 || jump > 0) { height += jump; jump -= 0.1 }\n            else if (height < 0) height = 0\n            else if (input.buttonIsPressed(Button.A)) jump = 1\n\n            cactusX -= 0.25\n            if (cactusX < -10) {\n                cactusX = randint(8, 18)\n                cactusType = randint(0, 4)\n                cactusY = 0\n                if (cactusType <= 1) { cactusW = 1; cactusH = 1 }\n                else if (cactusType == 2) { cactusW = 0; cactusH = 1 }\n                else if (cactusType == 3) { cactusW = 0; cactusH = 2 }\n                else if (cactusType == 4) { cactusW = 2; cactusH = 0; cactusY = 2 }\n            }\n\n            if (touching(0, height, 0, 1, cactusX, cactusY, cactusW, cactusH)) gameOver()\n\n            draw(2, 3, 1, 1, 10) // sun\n            draw(0, height, 0, 1, 50) // player\n            if (cactusX > 4) draw(4, cactusY, 0, cactusH, Math.map(cactusX, 4, 8, 50, 0))\n            draw(cactusX, cactusY, cactusW, cactusH, 256)\n\n            if (cactusX == 0) {\n                score++;\n                soundScore();\n            }\n            basic.pause(20)\n        } else basic.pause(100)\n    }\n})\n\n// CATCH THE STAR\ncontrol.inBackground(function catchLoop() {\n    while (true) {\n        if (activeGame == \"catch\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            starY++\n            if (starY > 4) {\n                if (starX == playerX) score++; else lives--\n                starX = randint(0, 4)\n                starY = 1\n            }\n            // if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            // if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            led.plot(starX, starY)\n            led.plot(playerX, 4)\n            basic.pause(200)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// WHACK-A-MOLE\ncontrol.inBackground(function moleLoop() {\n    blink = 5;\n    moleScored = true;\n    while (true) {\n        if (activeGame == \"mole\") {\n            basic.clearScreen()\n            draw(0, 0, 1, 3, 10)\n            draw(3, 0, 1, 3, 10)\n            drawTopBar(lives - 1, 3)\n            if (blink < 2) led.plot(moleX, moleY)\n            else if (!moleScored) { lives--; moleScored = true; soundDamage() }\n            blink++;\n            if (blink > 10) {\n                blink = 0;\n                moleX = randint(0, 3);\n                if (moleX >= 2) moleX++;\n                moleY = randint(1, 4);\n                moleScored = false;\n            }\n            if (lives <= 0) gameOver()\n            basic.pause(300)\n        } else basic.pause(100)\n    }\n})\n\n// SPACE INVADER\ncontrol.inBackground(function invaderLoop() {\n    bullY = 6;\n    while (true) {\n        if (activeGame == \"invader\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            invX += invDir\n            if (invX <= 0 || invX >= 4) invDir *= -1\n            bullY++;\n            if (bullY > randint(6, 12) && invX == playerX) {\n                bullY = 1;\n                bullX = invX;\n            }\n            led.plot(invX, 1)\n            led.plot(playerX, 4)\n            if (bullY <= 4) led.plotBrightness(bullX, bullY, 20);\n            if (bullY == 4 && playerX == bullX) { lives--; soundDamage(); }\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// SIMON\ncontrol.inBackground(function simonLoop() {\n    while (true) {\n        if (activeGame == \"simon\") {\n            basic.clearScreen()\n            drawTopBar(lives, 3)\n            fishX = (fishX + randint(-1, 1) + 5) % 5\n            fishY = (fishY + randint(-1, 1) + 5) % 4\n            led.plot(fishX, fishY)\n            led.plot(playerX, 4)\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// === INPUT HANDLING FOR MENU ===\ninput.onButtonPressed(Button.A, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + games.length - 1) % games.length\n    else if (activeGame == \"catch\" && playerX > 0) playerX--\n    else if (activeGame == \"invader\" && playerX > 0) playerX--\n    else if (activeGame == \"mole\" && moleX < 2) { score++; moleScored = true; blink = 5; soundScore() }\n})\ninput.onButtonPressed(Button.B, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + 1) % games.length\n    else if (activeGame == \"catch\" && playerX < 4) playerX++\n    else if (activeGame == \"invader\" && playerX < 4) playerX++\n    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5; soundScore() }\n})\ninput.onButtonPressed(Button.AB, function () {\n    if (activeGame == \"menu\") {\n        activeGame = games[currentGame]\n        score = 0; lives = 3; playerX = 2\n    } else if (activeGame == \"invader\") {\n        draw(playerX, 1, 0, 2, 20);\n        if (invX == playerX) { score++; invX = randint(1, 3); soundScore() }\n    }\n    // else if (activeGame == \"fishing\" && fishX == playerX) { score++; soundScore(); }\n})\n\ninput.onLogoEvent(TouchButtonEvent.Pressed, function () {\n    if(activeGame == \"menu\") return;\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    basic.clearScreen();\n    activeGame = \"menu\";\n    pause(100);\n    score = 0;\n    lives = 3;\n})\n\nfunction soundScore() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n}\n\nfunction soundDamage() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.JumpDown), music.PlaybackMode.InBackground);\n}","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1755426164037,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"// === UTILITIES ===\nfunction draw(x: number, y: number, w: number, h: number, b: number) {\n    for (let ox = 0; ox <= w; ox++) {\n        for (let oy = 0; oy <= h; oy++) {\n            if (x + ox >= 0 && x + ox < 5 && 4 - (y + oy) >= 0 && 4 - (y + oy) < 5)\n                led.plotBrightness(x + ox, 4 - (y + oy), b)\n        }\n    }\n}\n\nfunction touching(x1: number, y1: number, w1: number, h1: number, x2: number, y2: number, w2: number, h2: number) {\n    return !(x1 + w1 < x2 || x1 > x2 + w2 || y1 + h1 < y2 || y1 > y2 + h2)\n}\n\n// 2x5 font for scores\nconst digits2x5: number[][][] = [\n    [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], [[0, 1], [1, 1], [0, 1], [0, 1], [1, 1]], [[1, 1], [0, 1], [1, 1], [1, 0], [1, 1]], [[1, 1], [0, 1], [1, 1], [0, 1], [1, 1]], [[1, 0], [1, 1], [1, 1], [0, 1], [0, 1]],\n    [[1, 1], [1, 0], [1, 1], [0, 1], [1, 1]], [[1, 1], [1, 0], [1, 1], [1, 1], [1, 1]], [[1, 1], [0, 1], [0, 1], [0, 1], [0, 1]], [[1, 1], [1, 1], [0, 0], [1, 1], [1, 1]], [[1, 1], [1, 1], [1, 1], [0, 1], [1, 1]]\n]\n\nfunction drawDigit2x5(d: number, x: number, brightness: number) {\n    for (let y = 0; y < 5; y++)\n        for (let dx = 0; dx < 2; dx++)\n            if (digits2x5[d][y][dx]) led.plotBrightness(x + dx, y, brightness)\n}\n\nfunction showTwoDigits(num: number) {\n    basic.clearScreen()\n    let tens = Math.idiv(num, 10) % 10\n    let ones = num % 10\n    drawDigit2x5(tens, 0, 180)\n    drawDigit2x5(ones, 3, 180)\n}\n\n// Top bar for menu/game\nfunction drawTopBar(selected: number, total: number, fill = true) {\n    for (let i = 0; i < total; i++)\n        led.plotBrightness(i, 0, (fill ? i <= selected : i == selected) ? 255 : 20)\n}\n\n// === GLOBALS ===\nlet activeGame = \"menu\"\nlet currentGame = 0\nlet blink = 0\nlet score = 0\nlet lives = 3\nlet playerX = 2\n\nlet cactusX = -1, cactusY = 0, cactusW = 0, cactusH = 0, cactusType = 0, jump = 0, height = 0\n\nlet starX = 2, starY = 1\nlet moleX = 2, moleY = 3, moleScored = false;\nlet invX = 2, invDir = 1, bullX = 0, bullY = 0\n\nlet games = [\"dino\", \"catch\", \"mole\", \"invader\", \"simon\"]\n\n// === MENU LOOP ===\ncontrol.inBackground(function menuLoop() {\n    while (true) {\n        if (activeGame == \"menu\") {\n            // simple animated preview\n            basic.clearScreen()\n            drawTopBar(currentGame, games.length, false)\n            if (games[currentGame] == \"dino\") {\n                draw(2, 3, 1, 0, 10) // sun\n                draw(0, 0, 0, 1, 50) // player\n                draw(3, 0, 1, 1, 100); // cactus\n            } else if (games[currentGame] == \"catch\") {\n                draw(1, 2, 0, 1, 10)\n                led.plot(3, 1);\n                led.plot(1, 3); led.plot(2, 4)\n            } else if (games[currentGame] == \"mole\") {\n                draw(0, 0, 1, 3, 10)\n                draw(3, 0, 1, 3, 10)\n                if (blink == 0) led.plot(moleX, moleY);\n                blink++;\n                if (blink > 5) {\n                    blink = 0;\n                    moleX = randint(0, 3);\n                    if (moleX >= 2) moleX++;\n                    moleY = randint(1, 4);\n                }\n            } else if (games[currentGame] == \"invader\") {\n                invX += invDir\n                if (invX <= 0 || invX >= 4) invDir *= -1\n                led.plot(invX, 1); led.plot(playerX, 4)\n            } else if (games[currentGame] == \"simon\") {\n                // led.plot(fishX, fishY); led.plot(playerX, 4)\n                led.plot(1, 1);\n                led.plot(1, 3);\n                led.plot(3, 1);\n                led.plot(3, 3);\n                led.plot(2, 2);\n            }\n\n            basic.pause(300)\n        } else {\n            basic.pause(100)\n        }\n    }\n})\n\n// === GAME OVER ===\nfunction gameOver() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    for (let i = 100; i > 0; i -= 2) {\n        draw(0, 0, 4, 4, i);\n        pause(10);\n    }\n    showTwoDigits(score)\n    while (!input.buttonIsPressed(Button.AB)) pause(100);\n    while (input.buttonIsPressed(Button.AB)) pause(20);\n    score = 0;\n    lives = 3;\n    activeGame = \"menu\"\n}\n\n// === GAME LOOPS ===\n// DINO\ncontrol.inBackground(function dinoLoop() {\n    while (true) {\n        if (activeGame == \"dino\") {\n            basic.clearScreen()\n            // jump logic\n            if (height > 0 || jump > 0) { height += jump; jump -= 0.1 }\n            else if (height < 0) height = 0\n            else if (input.buttonIsPressed(Button.A)) jump = 1\n\n            cactusX -= 0.25\n            if (cactusX < -10) {\n                cactusX = randint(8, 18)\n                cactusType = randint(0, 4)\n                cactusY = 0\n                if (cactusType <= 1) { cactusW = 1; cactusH = 1 }\n                else if (cactusType == 2) { cactusW = 0; cactusH = 1 }\n                else if (cactusType == 3) { cactusW = 0; cactusH = 2 }\n                else if (cactusType == 4) { cactusW = 2; cactusH = 0; cactusY = 2 }\n            }\n\n            if (touching(0, height, 0, 1, cactusX, cactusY, cactusW, cactusH)) gameOver()\n\n            draw(2, 3, 1, 1, 10) // sun\n            draw(0, height, 0, 1, 50) // player\n            if (cactusX > 4) draw(4, cactusY, 0, cactusH, Math.map(cactusX, 4, 8, 50, 0))\n            draw(cactusX, cactusY, cactusW, cactusH, 256)\n\n            if (cactusX == 0) {\n                score++;\n                soundScore();\n            }\n            basic.pause(20)\n        } else basic.pause(100)\n    }\n})\n\n// CATCH THE STAR\ncontrol.inBackground(function catchLoop() {\n    while (true) {\n        if (activeGame == \"catch\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            starY++\n            if (starY > 4) {\n                if (starX == playerX) score++; else lives--\n                starX = randint(0, 4)\n                starY = 1\n            }\n            // if (input.buttonIsPressed(Button.A) && playerX > 0) playerX--\n            // if (input.buttonIsPressed(Button.B) && playerX < 4) playerX++\n            led.plot(starX, starY)\n            led.plot(playerX, 4)\n            basic.pause(200)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// WHACK-A-MOLE\ncontrol.inBackground(function moleLoop() {\n    blink = 5;\n    moleScored = true;\n    while (true) {\n        if (activeGame == \"mole\") {\n            basic.clearScreen()\n            draw(0, 0, 1, 3, 10)\n            draw(3, 0, 1, 3, 10)\n            drawTopBar(lives - 1, 3)\n            if (blink < 2) led.plot(moleX, moleY)\n            else if (!moleScored) { lives--; moleScored = true; soundDamage() }\n            blink++;\n            if (blink > 10) {\n                blink = 0;\n                moleX = randint(0, 3);\n                if (moleX >= 2) moleX++;\n                moleY = randint(1, 4);\n                moleScored = false;\n            }\n            if (lives <= 0) gameOver()\n            basic.pause(300)\n        } else basic.pause(100)\n    }\n})\n\n// SPACE INVADER\ncontrol.inBackground(function invaderLoop() {\n    bullY = 6;\n    while (true) {\n        if (activeGame == \"invader\") {\n            basic.clearScreen()\n            drawTopBar(lives - 1, 3)\n            invX += invDir\n            if (invX <= 0 || invX >= 4) invDir *= -1\n            bullY++;\n            if (bullY > randint(6, 12) && invX == playerX) {\n                bullY = 1;\n                bullX = invX;\n            }\n            led.plot(invX, 1)\n            led.plot(playerX, 4)\n            if (bullY <= 4) led.plotBrightness(bullX, bullY, 20);\n            if (bullY == 4 && playerX == bullX) { lives--; soundDamage(); }\n            basic.pause(300)\n            if (lives <= 0) gameOver()\n        } else basic.pause(100)\n    }\n})\n\n// SIMON\nlet simon: number[] = []\nlet guessed = 0\nlet simonReady = false;\n\ncontrol.inBackground(function invaderLoop() {\n    simon = [];\n    while (true) {\n        if (activeGame == \"simon\") {\n            if(guessed == simon.length) {\n                simonReady = false;\n                simon.push(randint(0, 2));\n                if (guessed > 0) {\n                    score += guessed;\n                    soundScore();\n                    pause(500);\n                }\n                guessed = 0;\n                flashSimonSequence();\n                simonReady = true;\n            };\n            pause(200);\n        } else basic.pause(100)\n    }\n})\n\nfunction flashSimonSequence() {\n    for (let step of simon) {\n        basic.clearScreen()\n        switch(step) {\n            case 0:\n                music.play(music.stringPlayable(\"B\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(0, 2, 255);\n                break;\n            case 1:\n                music.play(music.stringPlayable(\"D\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(4, 2, 255);\n                break;\n            case 2:\n                music.play(music.stringPlayable(\"F\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(2, 0, 255);\n                break;\n        };\n        basic.pause(500)\n        basic.clearScreen()\n        basic.pause(200)\n    }\n}\n\nfunction simonInput(button: number) {\n    if(!simonReady) return;\n    if (button == simon[guessed]) {\n        guessed++\n        switch (button) {\n            case 0:\n                music.play(music.stringPlayable(\"B\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(0, 2, 255);\n                break;\n            case 1:\n                music.play(music.stringPlayable(\"D\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(4, 2, 255);\n                break;\n            case 2:\n                music.play(music.stringPlayable(\"F\", 500), music.PlaybackMode.UntilDone)\n                led.plotBrightness(2, 0, 255);\n                break;\n        };\n        basic.pause(500)\n        basic.clearScreen()\n    } else { soundDamage(); gameOver() }\n}\n\n// === INPUT HANDLING FOR MENU ===\ninput.onButtonPressed(Button.A, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + games.length - 1) % games.length\n    else if (activeGame == \"catch\" && playerX > 0) playerX--\n    else if (activeGame == \"invader\" && playerX > 0) playerX--\n    else if (activeGame == \"mole\" && moleX < 2) { score++; moleScored = true; blink = 5; soundScore() }\n    else if (activeGame == \"simon\") simonInput(0);\n})\ninput.onButtonPressed(Button.B, function () {\n    if (activeGame == \"menu\") currentGame = (currentGame + 1) % games.length\n    else if (activeGame == \"catch\" && playerX < 4) playerX++\n    else if (activeGame == \"invader\" && playerX < 4) playerX++\n    else if (activeGame == \"mole\" && moleX > 2) { score++; moleScored = true; blink = 5; soundScore() }\n    else if (activeGame == \"simon\") simonInput(1);\n})\ninput.onButtonPressed(Button.AB, function () {\n    if (activeGame == \"menu\") {\n        activeGame = games[currentGame]\n        score = 0; lives = 3; playerX = 2\n    } else if (activeGame == \"invader\") {\n        draw(playerX, 1, 0, 2, 20);\n        if (invX == playerX) { score++; invX = randint(1, 3); soundScore() }\n    }\n    // else if (activeGame == \"fishing\" && fishX == playerX) { score++; soundScore(); }\n})\n\ninput.onLogoEvent(TouchButtonEvent.Pressed, function () {\n    if (activeGame == \"simon\") return simonInput(2);\n    if(activeGame == \"menu\") return;\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.PowerDown), music.PlaybackMode.InBackground);\n    basic.clearScreen();\n    activeGame = \"menu\";\n    pause(100);\n    score = 0;\n    lives = 3;\n})\n\nfunction soundScore() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.BaDing), music.PlaybackMode.InBackground);\n}\n\nfunction soundDamage() {\n    music._playDefaultBackground(music.builtInPlayableMelody(Melodies.JumpDown), music.PlaybackMode.InBackground);\n}","README.md":"","pxt.json":"{\n    \"name\": \"arcader\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1755427568233}